{"ast":null,"code":"// quickSort.js\nexport function quickSort(array){const animations=[];const sortedArray=array.slice();quickSortHelper(sortedArray,0,sortedArray.length-1,animations);return animations;}function quickSortHelper(array,low,high,animations){if(low<high){const pivotIdx=partition(array,low,high,animations);quickSortHelper(array,low,pivotIdx-1,animations);quickSortHelper(array,pivotIdx+1,high,animations);}}function partition(array,low,high,animations){const pivot=array[high];let i=low-1;for(let j=low;j<high;j++){animations.push([j,high,false]);if(array[j]<pivot){i++;animations.push([i,j,true]);const temp=array[i];array[i]=array[j];array[j]=temp;}}animations.push([i+1,high,true]);const temp=array[i+1];array[i+1]=array[high];array[high]=temp;return i+1;}","map":{"version":3,"names":["quickSort","array","animations","sortedArray","slice","quickSortHelper","length","low","high","pivotIdx","partition","pivot","i","j","push","temp"],"sources":["D:/Project/sorting_visualizer/src/Algorithms/QuickSort.js"],"sourcesContent":["// quickSort.js\r\n\r\nexport function quickSort(array) {\r\n    const animations = [];\r\n    const sortedArray = array.slice();\r\n    quickSortHelper(sortedArray, 0, sortedArray.length - 1, animations);\r\n    return animations;\r\n  }\r\n  \r\n  function quickSortHelper(array, low, high, animations) {\r\n    if (low < high) {\r\n      const pivotIdx = partition(array, low, high, animations);\r\n      quickSortHelper(array, low, pivotIdx - 1, animations);\r\n      quickSortHelper(array, pivotIdx + 1, high, animations);\r\n    }\r\n  }\r\n  \r\n  function partition(array, low, high, animations) {\r\n    const pivot = array[high];\r\n    let i = low - 1;\r\n  \r\n    for (let j = low; j < high; j++) {\r\n      animations.push([j, high, false]);\r\n      if (array[j] < pivot) {\r\n        i++;\r\n        animations.push([i, j, true]);\r\n        const temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n      }\r\n    }\r\n  \r\n    animations.push([i + 1, high, true]);\r\n    const temp = array[i + 1];\r\n    array[i + 1] = array[high];\r\n    array[high] = temp;\r\n  \r\n    return i + 1;\r\n  }\r\n  "],"mappings":"AAAA;AAEA,MAAO,SAAS,CAAAA,SAASA,CAACC,KAAK,CAAE,CAC7B,KAAM,CAAAC,UAAU,CAAG,EAAE,CACrB,KAAM,CAAAC,WAAW,CAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,CACjCC,eAAe,CAACF,WAAW,CAAE,CAAC,CAAEA,WAAW,CAACG,MAAM,CAAG,CAAC,CAAEJ,UAAU,CAAC,CACnE,MAAO,CAAAA,UAAU,CACnB,CAEA,QAAS,CAAAG,eAAeA,CAACJ,KAAK,CAAEM,GAAG,CAAEC,IAAI,CAAEN,UAAU,CAAE,CACrD,GAAIK,GAAG,CAAGC,IAAI,CAAE,CACd,KAAM,CAAAC,QAAQ,CAAGC,SAAS,CAACT,KAAK,CAAEM,GAAG,CAAEC,IAAI,CAAEN,UAAU,CAAC,CACxDG,eAAe,CAACJ,KAAK,CAAEM,GAAG,CAAEE,QAAQ,CAAG,CAAC,CAAEP,UAAU,CAAC,CACrDG,eAAe,CAACJ,KAAK,CAAEQ,QAAQ,CAAG,CAAC,CAAED,IAAI,CAAEN,UAAU,CAAC,CACxD,CACF,CAEA,QAAS,CAAAQ,SAASA,CAACT,KAAK,CAAEM,GAAG,CAAEC,IAAI,CAAEN,UAAU,CAAE,CAC/C,KAAM,CAAAS,KAAK,CAAGV,KAAK,CAACO,IAAI,CAAC,CACzB,GAAI,CAAAI,CAAC,CAAGL,GAAG,CAAG,CAAC,CAEf,IAAK,GAAI,CAAAM,CAAC,CAAGN,GAAG,CAAEM,CAAC,CAAGL,IAAI,CAAEK,CAAC,EAAE,CAAE,CAC/BX,UAAU,CAACY,IAAI,CAAC,CAACD,CAAC,CAAEL,IAAI,CAAE,KAAK,CAAC,CAAC,CACjC,GAAIP,KAAK,CAACY,CAAC,CAAC,CAAGF,KAAK,CAAE,CACpBC,CAAC,EAAE,CACHV,UAAU,CAACY,IAAI,CAAC,CAACF,CAAC,CAAEC,CAAC,CAAE,IAAI,CAAC,CAAC,CAC7B,KAAM,CAAAE,IAAI,CAAGd,KAAK,CAACW,CAAC,CAAC,CACrBX,KAAK,CAACW,CAAC,CAAC,CAAGX,KAAK,CAACY,CAAC,CAAC,CACnBZ,KAAK,CAACY,CAAC,CAAC,CAAGE,IAAI,CACjB,CACF,CAEAb,UAAU,CAACY,IAAI,CAAC,CAACF,CAAC,CAAG,CAAC,CAAEJ,IAAI,CAAE,IAAI,CAAC,CAAC,CACpC,KAAM,CAAAO,IAAI,CAAGd,KAAK,CAACW,CAAC,CAAG,CAAC,CAAC,CACzBX,KAAK,CAACW,CAAC,CAAG,CAAC,CAAC,CAAGX,KAAK,CAACO,IAAI,CAAC,CAC1BP,KAAK,CAACO,IAAI,CAAC,CAAGO,IAAI,CAElB,MAAO,CAAAH,CAAC,CAAG,CAAC,CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}